//242. Valid Anagram
//https://leetcode.com/problems/valid-anagram/

public class Solution {
    public boolean isAnagram(String s, String t) {
    //even better vision
    	if(s.length()==t.length()){
		int[] count = new int[26];
		int check = 0;
		for(int i = 0; i < s.length(); i ++){
			if(++count[s.charAt(i)-'a']==1){
				check++;
			}
			if(--count[t.charAt(i)-'a']==0){
				check--;
			}	
		}
		if(check == 0){
			return true;
		}else{
			return false;
		}
	}else{
		return false;
	}
    
    /*
    //O(N)
    	if(s.length()==t.length()){
		int[] count = new int[26];
		for(int i = 0; i < s.length(); i ++){
			count[s.charAt(i)-'a']++;
			count[t.charAt(i)-'a']--;
		}
		for(int i = 0; i < count.length; i ++){
			if(count[i]!=0) return false;
		}
		return true;
	}else{
		return false;
	}
    */	
	
    /*  SLOW 600+MS
        ArrayList<Character> cArr = new ArrayList<Character>();
		for(int i = 0; i < s.length(); i ++){
			cArr.add(s.charAt(i));
		}
		if(cArr.size()==t.length()){
			for(int i= 0; i < t.length(); i ++){
				if(cArr.contains(t.charAt(i))){
					for(int j = 0; j < cArr.size();j++){
						if(cArr.get(j)==t.charAt(i)){
							cArr.remove(j);
							break;
						}
					}
				}
				else{
					return false;
				}
			}
		}else{
			return false;
		}
		return true;
		*/
		
		/*   60MS
		if(s.length()==t.length()){
			ArrayList<Character> c1 = new ArrayList<Character>();
			for(int i = 0; i < s.length(); i ++){
				c1.add(s.charAt(i));
			}
			ArrayList<Character> c2 = new ArrayList<Character>();
			for(int i = 0; i < t.length(); i ++){
				c2.add(t.charAt(i));
			}
			Collections.sort(c1);
			Collections.sort(c2);
			for(int i = 0; i < t.length(); i ++){
				if(c1.get(i)!=c2.get(i)){
					return false;
				}
			}
			return true;
		}else{
			return false;
		}
		*/
		
		
    }
}
